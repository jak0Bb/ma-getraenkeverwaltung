<?php

namespace Proxies\__CG__\Sulu\Bundle\MediaBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class FileVersion extends \Sulu\Bundle\MediaBundle\Entity\FileVersion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'name', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'version', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'subVersion', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'size', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'mimeType', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'storageOptions', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'storageType', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'downloadCounter', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'created', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'changed', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'id', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'contentLanguages', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'publishLanguages', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'meta', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'formatOptions', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'file', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'tags', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'changer', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'creator', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'defaultMeta', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'properties', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'categories', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'targetGroups', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'focusPointX', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'focusPointY'];
        }

        return ['__isInitialized__', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'name', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'version', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'subVersion', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'size', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'mimeType', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'storageOptions', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'storageType', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'downloadCounter', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'created', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'changed', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'id', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'contentLanguages', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'publishLanguages', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'meta', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'formatOptions', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'file', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'tags', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'changer', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'creator', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'defaultMeta', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'properties', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'categories', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'targetGroups', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'focusPointX', '' . "\0" . 'Sulu\\Bundle\\MediaBundle\\Entity\\FileVersion' . "\0" . 'focusPointY'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (FileVersion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function increaseSubVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increaseSubVersion', []);

        return parent::increaseSubVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubVersion', []);

        return parent::getSubVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', [$size]);

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', []);

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType($mimeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', [$mimeType]);

        return parent::setMimeType($mimeType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', []);

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', []);

        return parent::getExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function setStorageOptions($storageOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStorageOptions', [$storageOptions]);

        return parent::setStorageOptions($storageOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getStorageOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStorageOptions', []);

        return parent::getStorageOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setDownloadCounter($downloadCounter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDownloadCounter', [$downloadCounter]);

        return parent::setDownloadCounter($downloadCounter);
    }

    /**
     * {@inheritDoc}
     */
    public function getDownloadCounter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDownloadCounter', []);

        return parent::getDownloadCounter();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanged()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanged', []);

        return parent::getChanged();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanged($changed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanged', [$changed]);

        return parent::setChanged($changed);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addContentLanguage(\Sulu\Bundle\MediaBundle\Entity\FileVersionContentLanguage $contentLanguages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContentLanguage', [$contentLanguages]);

        return parent::addContentLanguage($contentLanguages);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContentLanguage(\Sulu\Bundle\MediaBundle\Entity\FileVersionContentLanguage $contentLanguages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContentLanguage', [$contentLanguages]);

        return parent::removeContentLanguage($contentLanguages);
    }

    /**
     * {@inheritDoc}
     */
    public function getContentLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentLanguages', []);

        return parent::getContentLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function addPublishLanguage(\Sulu\Bundle\MediaBundle\Entity\FileVersionPublishLanguage $publishLanguages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPublishLanguage', [$publishLanguages]);

        return parent::addPublishLanguage($publishLanguages);
    }

    /**
     * {@inheritDoc}
     */
    public function removePublishLanguage(\Sulu\Bundle\MediaBundle\Entity\FileVersionPublishLanguage $publishLanguages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePublishLanguage', [$publishLanguages]);

        return parent::removePublishLanguage($publishLanguages);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishLanguages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishLanguages', []);

        return parent::getPublishLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function addMeta(\Sulu\Bundle\MediaBundle\Entity\FileVersionMeta $meta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMeta', [$meta]);

        return parent::addMeta($meta);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMeta(\Sulu\Bundle\MediaBundle\Entity\FileVersionMeta $meta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMeta', [$meta]);

        return parent::removeMeta($meta);
    }

    /**
     * {@inheritDoc}
     */
    public function getMeta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMeta', []);

        return parent::getMeta();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormatOptions(\Sulu\Bundle\MediaBundle\Entity\FormatOptions $formatOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormatOptions', [$formatOptions]);

        return parent::addFormatOptions($formatOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormatOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormatOptions', []);

        return parent::getFormatOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Sulu\Bundle\MediaBundle\Entity\File $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Sulu\Bundle\TagBundle\Tag\TagInterface $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tags]);

        return parent::addTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Sulu\Bundle\TagBundle\Tag\TagInterface $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tags]);

        return parent::removeTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTags', []);

        return parent::removeTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setChanger(\Sulu\Component\Security\Authentication\UserInterface $changer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChanger', [$changer]);

        return parent::setChanger($changer);
    }

    /**
     * {@inheritDoc}
     */
    public function getChanger()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChanger', []);

        return parent::getChanger();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\Sulu\Component\Security\Authentication\UserInterface $creator = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', []);

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMeta(\Sulu\Bundle\MediaBundle\Entity\FileVersionMeta $defaultMeta = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMeta', [$defaultMeta]);

        return parent::setDefaultMeta($defaultMeta);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMeta()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMeta', []);

        return parent::getDefaultMeta();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setStorageType($storageType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStorageType', [$storageType]);

        return parent::setStorageType($storageType);
    }

    /**
     * {@inheritDoc}
     */
    public function getStorageType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStorageType', []);

        return parent::getStorageType();
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperties', []);

        return parent::getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties(array $properties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProperties', [$properties]);

        return parent::setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\Sulu\Bundle\CategoryBundle\Entity\CategoryInterface $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', [$categories]);

        return parent::addCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', []);

        return parent::removeCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addTargetGroup(\Sulu\Bundle\AudienceTargetingBundle\Entity\TargetGroupInterface $targetGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTargetGroup', [$targetGroup]);

        return parent::addTargetGroup($targetGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTargetGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTargetGroups', []);

        return parent::removeTargetGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getTargetGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTargetGroups', []);

        return parent::getTargetGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getFocusPointX()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFocusPointX', []);

        return parent::getFocusPointX();
    }

    /**
     * {@inheritDoc}
     */
    public function setFocusPointX($focusPointX)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFocusPointX', [$focusPointX]);

        return parent::setFocusPointX($focusPointX);
    }

    /**
     * {@inheritDoc}
     */
    public function getFocusPointY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFocusPointY', []);

        return parent::getFocusPointY();
    }

    /**
     * {@inheritDoc}
     */
    public function setFocusPointY($focusPointY)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFocusPointY', [$focusPointY]);

        return parent::setFocusPointY($focusPointY);
    }

}
